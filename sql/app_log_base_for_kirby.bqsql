WITH
# tada-ext.firebase_app_event 를 사용할 때
firebase AS (
  SELECT
    date_kr,
    event_name,
    event_datetime,
    user_id, 
    # 구 버전에서 클라쪽 이슈로 아이디 날라가는 이슈가 있었음. 타다 돌아와서 물어보니까 고쳤다카더라 하지만 여전히 아아아아ㅏㅏㅏ주 조금 있긴 함
    user_pseudo_id, 
    # 파베에서 자체적으로 붙여주는 써드파티 id 로 앱이 설치되면 발생함 == 한 명의 user 에게 여러 pseudo가 있을수도 그 반대일수도 있다.

    --------------------이 아래로는 view_click과 같은 클라로그 볼 때 많이 쓴다.---------------------------------------------------
    MAX(IF(e.key = "view_name", e.string_value, NULL)) AS view_name,
    # 클라로그는 어떤걸 눌렀는지 그 이름이 남다보니 어떤 이벤트가 발생했는지 특정할 필요가 없다.
  
    --------------------이 아래로는 web_click과 같은 웹로그 볼 때 많이 쓴다.---------------------------------------------------
    MAX(IF(e.key = "page_location", e.string_value, NULL)) AS page_location,
    MAX(IF(e.key = "compoenent_name", e.string_value, NULL)) AS component_name,
    MAX(IF(e.key = "query_string", e.string_value, NULL)) AS query_string,
    # 웹 로그는 이벤트에 대한 정보들이 다양하게 존재하기 때문에 어떤 이벤트가 발생했는지 특정하여 봐야한다.

  FROM `kr-co-vcnc-tada.tada_ext.firebase_app_event`, UNNEST(event_params) AS e # 이러면 cross join 한 것과 같다
  # 참고로 user_properties 를 사용해야하는 경우도 있는데 이 때 한번에 cross join 걸고서 데이터 처리 잘못하면 중복의 지옥에 빠질테니 이건 보는 사람이 알아서 잘 해야한다. 정 처리 못하겠으면 각각 만들고 event_datetime 이랑 user_id 등 이용해서 join 하자
  WHERE
    date_kr >= "2022-10-10" 
    # date_kr 은 필수파티션 컬럼
    AND app_id = "kr.co.vcnc.tada" 
    # 드버 로그볼 땐 kr.co.vcnc.tada.driver 하면 된다. 참고로 드버앱은 안드로이드만 있음
    AND event_name IN ("view_click" , "view_impression", "web_page_view", "web_click") 
    # 더 많은 evnet_name이 있지만 가장 많이 쓰게될 친구들은 얘네다. 
    # 그 외로는 confirm_origin, request_ride, confirm_request, alternative_ride, confirm_origin_confirm 등 호출관련 시리즈가 있다. 
    # 보려는 데이터마다 실제 event_params 를 찾아서 보고 세팅해야함. 귀찮으면 전부 외우면 된다. 근데 쓰다보면 외워짐

  GROUP BY
    date_kr, event_name, event_datetime, user_id, user_pseudo_id
    # 여기서 간혹 윈도우 절을 사용하는 다른 연산이 필요할 때가 있다. 가령 각 유저별 첫번째 이벤트 발생 시간이 언제인지 등이 궁금할 떄
    # 이럴때는 window 절 partition by 를 group by 에 있는 컬럼으로 해주면 된다. (이 때 distinct 쓰는거 잊지말자.)
    # FIRST_VALUE(event_datetime) OVER (PARTITION BY date_kr, event_name, event_datetime, user_id, user_pseudo_id) AS first_event_dt,  
    # MAX(IF(e.key = "view_name", e.string_value, NULL)) OVER (PARTITION BY date_kr, event_name, event_datetime, user_id, user_pseudo_id)
),

# analytics.events_ 혹은 event_intraday_ 를 사용할 때
# firebase 가 얘네를 기반으로 한 번 더 풀어놓은 형태인것을 생각하면 얜 반대로 풀고 struct 형 타입을 제어한다고 생각하면 된다.
# 대신 그만큼 얘가 더 많은 정보를 갖고 있기 때문에 아ㅏㅏㅏㅏ주 가끔 필요할 때가 있다. 근데 대부분 firebase_app_ext 에 있어서 솔직히 얘 안쓰는게 답이다.
# 특히 이 데이터셋 관련된 쿼리는 다른팀과 되도록 공유하지 말것.
anals AS (
  SELECT
    PARSE_DATE("%Y%m%d",event_date) AS date_kr,
    DATETIME(TIMESTAMP_MICROS(event_timestamp),"Asia/Seoul") AS event_datetime,
    event_name,
    user_id, 
    user_pseudo_id,
    MAX(IF(e.key = "view_name", e.value.string_value, NULL)) AS view_name,
    MAX(IF(e.key = "page_location", e.value.string_value, NULL)) AS page_location,
    MAX(IF(e.key = "compoenent_name", e.value.string_value, NULL)) AS component_name,
    MAX(IF(e.key = "query_string", e.value.string_value, NULL)) AS query_string,
  FROM `kr-co-vcnc-tada.analytics_181161192.events_*`, UNNEST(event_params) AS e
  WHERE
    _TABLE_SUFFIX = "20221010"
    # _TABLE_SUFFIX 활용잘하자 잘못하다 지옥감
    AND app_info.id = "kr.co.vcnc.tada" 
    AND event_name IN ("view_click" , "view_impression", "web_page_view", "web_click") 
  GROUP BY
    date_kr, event_name, event_datetime, user_id, user_pseudo_id
),

# 위에서 원하는 이벤트의 evnet_params 를 직접 찾아서 파싱해줘야 한다고 언급했는데,
# web은 이미 알고 있으니까 상관 없고, view_name은 로그보고 찾으면 된다. view_name이 특정됐다고 치고 러프한 예시는 다음과 같이 하면된다.
find_target_event_params AS (
  WITH
  targets AS (
    SELECT
      event_params
    FROM `kr-co-vcnc-tada.tada_ext.firebase_app_event`, UNNEST(event_params) AS e
    WHERE date_kr >= "2022-10-10"
    QUALIFY MAX(IF(e.key = "view_name", e.string_value, NULL)) OVER (PARTITION BY user_id,event_datetime)= "target_view_name" # 대충 저거 2개만 써도 중복될 일은 없다
  )

  select * from targets
)


